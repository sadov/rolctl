// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/sadov/rolctl/models"
	"github.com/spf13/cobra"
)

// Schema cli for DtosEthernetSwitchVLANUpdateDto

// register flags to command
func registerModelDtosEthernetSwitchVLANUpdateDtoFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerDtosEthernetSwitchVLANUpdateDtoTaggedPorts(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerDtosEthernetSwitchVLANUpdateDtoUntaggedPorts(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerDtosEthernetSwitchVLANUpdateDtoTaggedPorts(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: taggedPorts []string array type is not supported by go-swagger cli yet

	return nil
}

func registerDtosEthernetSwitchVLANUpdateDtoUntaggedPorts(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: untaggedPorts []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelDtosEthernetSwitchVLANUpdateDtoFlags(depth int, m *models.DtosEthernetSwitchVLANUpdateDto, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, taggedPortsAdded := retrieveDtosEthernetSwitchVLANUpdateDtoTaggedPortsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || taggedPortsAdded

	err, untaggedPortsAdded := retrieveDtosEthernetSwitchVLANUpdateDtoUntaggedPortsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || untaggedPortsAdded

	return nil, retAdded
}

func retrieveDtosEthernetSwitchVLANUpdateDtoTaggedPortsFlags(depth int, m *models.DtosEthernetSwitchVLANUpdateDto, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	taggedPortsFlagName := fmt.Sprintf("%v.taggedPorts", cmdPrefix)
	if cmd.Flags().Changed(taggedPortsFlagName) {
		// warning: taggedPorts array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveDtosEthernetSwitchVLANUpdateDtoUntaggedPortsFlags(depth int, m *models.DtosEthernetSwitchVLANUpdateDto, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	untaggedPortsFlagName := fmt.Sprintf("%v.untaggedPorts", cmdPrefix)
	if cmd.Flags().Changed(untaggedPortsFlagName) {
		// warning: untaggedPorts array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
