// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDhcpIDReader is a Reader for the DeleteDhcpID structure.
type DeleteDhcpIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDhcpIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDhcpIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDhcpIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDhcpIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDhcpIDNoContent creates a DeleteDhcpIDNoContent with default headers values
func NewDeleteDhcpIDNoContent() *DeleteDhcpIDNoContent {
	return &DeleteDhcpIDNoContent{}
}

/*
DeleteDhcpIDNoContent describes a response with status code 204, with default header values.

OK, but No Content
*/
type DeleteDhcpIDNoContent struct {
}

// IsSuccess returns true when this delete dhcp Id no content response has a 2xx status code
func (o *DeleteDhcpIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete dhcp Id no content response has a 3xx status code
func (o *DeleteDhcpIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete dhcp Id no content response has a 4xx status code
func (o *DeleteDhcpIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete dhcp Id no content response has a 5xx status code
func (o *DeleteDhcpIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete dhcp Id no content response a status code equal to that given
func (o *DeleteDhcpIDNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteDhcpIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/{id}][%d] deleteDhcpIdNoContent ", 204)
}

func (o *DeleteDhcpIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /dhcp/{id}][%d] deleteDhcpIdNoContent ", 204)
}

func (o *DeleteDhcpIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDhcpIDNotFound creates a DeleteDhcpIDNotFound with default headers values
func NewDeleteDhcpIDNotFound() *DeleteDhcpIDNotFound {
	return &DeleteDhcpIDNotFound{}
}

/*
DeleteDhcpIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteDhcpIDNotFound struct {
}

// IsSuccess returns true when this delete dhcp Id not found response has a 2xx status code
func (o *DeleteDhcpIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete dhcp Id not found response has a 3xx status code
func (o *DeleteDhcpIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete dhcp Id not found response has a 4xx status code
func (o *DeleteDhcpIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete dhcp Id not found response has a 5xx status code
func (o *DeleteDhcpIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete dhcp Id not found response a status code equal to that given
func (o *DeleteDhcpIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteDhcpIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/{id}][%d] deleteDhcpIdNotFound ", 404)
}

func (o *DeleteDhcpIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /dhcp/{id}][%d] deleteDhcpIdNotFound ", 404)
}

func (o *DeleteDhcpIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDhcpIDInternalServerError creates a DeleteDhcpIDInternalServerError with default headers values
func NewDeleteDhcpIDInternalServerError() *DeleteDhcpIDInternalServerError {
	return &DeleteDhcpIDInternalServerError{}
}

/*
DeleteDhcpIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteDhcpIDInternalServerError struct {
}

// IsSuccess returns true when this delete dhcp Id internal server error response has a 2xx status code
func (o *DeleteDhcpIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete dhcp Id internal server error response has a 3xx status code
func (o *DeleteDhcpIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete dhcp Id internal server error response has a 4xx status code
func (o *DeleteDhcpIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete dhcp Id internal server error response has a 5xx status code
func (o *DeleteDhcpIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete dhcp Id internal server error response a status code equal to that given
func (o *DeleteDhcpIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteDhcpIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/{id}][%d] deleteDhcpIdInternalServerError ", 500)
}

func (o *DeleteDhcpIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /dhcp/{id}][%d] deleteDhcpIdInternalServerError ", 500)
}

func (o *DeleteDhcpIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
