// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// PutDhcpIDLeaseLeaseIDReader is a Reader for the PutDhcpIDLeaseLeaseID structure.
type PutDhcpIDLeaseLeaseIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutDhcpIDLeaseLeaseIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutDhcpIDLeaseLeaseIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutDhcpIDLeaseLeaseIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutDhcpIDLeaseLeaseIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutDhcpIDLeaseLeaseIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutDhcpIDLeaseLeaseIDOK creates a PutDhcpIDLeaseLeaseIDOK with default headers values
func NewPutDhcpIDLeaseLeaseIDOK() *PutDhcpIDLeaseLeaseIDOK {
	return &PutDhcpIDLeaseLeaseIDOK{}
}

/*
PutDhcpIDLeaseLeaseIDOK describes a response with status code 200, with default header values.

OK
*/
type PutDhcpIDLeaseLeaseIDOK struct {
	Payload *models.DtosDHCP4LeaseDto
}

// IsSuccess returns true when this put dhcp Id lease lease Id o k response has a 2xx status code
func (o *PutDhcpIDLeaseLeaseIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put dhcp Id lease lease Id o k response has a 3xx status code
func (o *PutDhcpIDLeaseLeaseIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put dhcp Id lease lease Id o k response has a 4xx status code
func (o *PutDhcpIDLeaseLeaseIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put dhcp Id lease lease Id o k response has a 5xx status code
func (o *PutDhcpIDLeaseLeaseIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put dhcp Id lease lease Id o k response a status code equal to that given
func (o *PutDhcpIDLeaseLeaseIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutDhcpIDLeaseLeaseIDOK) Error() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdOK  %+v", 200, o.Payload)
}

func (o *PutDhcpIDLeaseLeaseIDOK) String() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdOK  %+v", 200, o.Payload)
}

func (o *PutDhcpIDLeaseLeaseIDOK) GetPayload() *models.DtosDHCP4LeaseDto {
	return o.Payload
}

func (o *PutDhcpIDLeaseLeaseIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosDHCP4LeaseDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDhcpIDLeaseLeaseIDBadRequest creates a PutDhcpIDLeaseLeaseIDBadRequest with default headers values
func NewPutDhcpIDLeaseLeaseIDBadRequest() *PutDhcpIDLeaseLeaseIDBadRequest {
	return &PutDhcpIDLeaseLeaseIDBadRequest{}
}

/*
PutDhcpIDLeaseLeaseIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutDhcpIDLeaseLeaseIDBadRequest struct {
	Payload *models.DtosValidationErrorDto
}

// IsSuccess returns true when this put dhcp Id lease lease Id bad request response has a 2xx status code
func (o *PutDhcpIDLeaseLeaseIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put dhcp Id lease lease Id bad request response has a 3xx status code
func (o *PutDhcpIDLeaseLeaseIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put dhcp Id lease lease Id bad request response has a 4xx status code
func (o *PutDhcpIDLeaseLeaseIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put dhcp Id lease lease Id bad request response has a 5xx status code
func (o *PutDhcpIDLeaseLeaseIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put dhcp Id lease lease Id bad request response a status code equal to that given
func (o *PutDhcpIDLeaseLeaseIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutDhcpIDLeaseLeaseIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutDhcpIDLeaseLeaseIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutDhcpIDLeaseLeaseIDBadRequest) GetPayload() *models.DtosValidationErrorDto {
	return o.Payload
}

func (o *PutDhcpIDLeaseLeaseIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosValidationErrorDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutDhcpIDLeaseLeaseIDNotFound creates a PutDhcpIDLeaseLeaseIDNotFound with default headers values
func NewPutDhcpIDLeaseLeaseIDNotFound() *PutDhcpIDLeaseLeaseIDNotFound {
	return &PutDhcpIDLeaseLeaseIDNotFound{}
}

/*
PutDhcpIDLeaseLeaseIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutDhcpIDLeaseLeaseIDNotFound struct {
}

// IsSuccess returns true when this put dhcp Id lease lease Id not found response has a 2xx status code
func (o *PutDhcpIDLeaseLeaseIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put dhcp Id lease lease Id not found response has a 3xx status code
func (o *PutDhcpIDLeaseLeaseIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put dhcp Id lease lease Id not found response has a 4xx status code
func (o *PutDhcpIDLeaseLeaseIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put dhcp Id lease lease Id not found response has a 5xx status code
func (o *PutDhcpIDLeaseLeaseIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put dhcp Id lease lease Id not found response a status code equal to that given
func (o *PutDhcpIDLeaseLeaseIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutDhcpIDLeaseLeaseIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdNotFound ", 404)
}

func (o *PutDhcpIDLeaseLeaseIDNotFound) String() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdNotFound ", 404)
}

func (o *PutDhcpIDLeaseLeaseIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutDhcpIDLeaseLeaseIDInternalServerError creates a PutDhcpIDLeaseLeaseIDInternalServerError with default headers values
func NewPutDhcpIDLeaseLeaseIDInternalServerError() *PutDhcpIDLeaseLeaseIDInternalServerError {
	return &PutDhcpIDLeaseLeaseIDInternalServerError{}
}

/*
PutDhcpIDLeaseLeaseIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutDhcpIDLeaseLeaseIDInternalServerError struct {
}

// IsSuccess returns true when this put dhcp Id lease lease Id internal server error response has a 2xx status code
func (o *PutDhcpIDLeaseLeaseIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put dhcp Id lease lease Id internal server error response has a 3xx status code
func (o *PutDhcpIDLeaseLeaseIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put dhcp Id lease lease Id internal server error response has a 4xx status code
func (o *PutDhcpIDLeaseLeaseIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put dhcp Id lease lease Id internal server error response has a 5xx status code
func (o *PutDhcpIDLeaseLeaseIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put dhcp Id lease lease Id internal server error response a status code equal to that given
func (o *PutDhcpIDLeaseLeaseIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutDhcpIDLeaseLeaseIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdInternalServerError ", 500)
}

func (o *PutDhcpIDLeaseLeaseIDInternalServerError) String() string {
	return fmt.Sprintf("[PUT /dhcp/{id}/lease/{leaseID}][%d] putDhcpIdLeaseLeaseIdInternalServerError ", 500)
}

func (o *PutDhcpIDLeaseLeaseIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
