// Code generated by go-swagger; DO NOT EDIT.

package ethernet_switch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// GetEthernetSwitchIDReader is a Reader for the GetEthernetSwitchID structure.
type GetEthernetSwitchIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEthernetSwitchIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEthernetSwitchIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetEthernetSwitchIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEthernetSwitchIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEthernetSwitchIDOK creates a GetEthernetSwitchIDOK with default headers values
func NewGetEthernetSwitchIDOK() *GetEthernetSwitchIDOK {
	return &GetEthernetSwitchIDOK{}
}

/*
GetEthernetSwitchIDOK describes a response with status code 200, with default header values.

OK
*/
type GetEthernetSwitchIDOK struct {
	Payload *models.DtosEthernetSwitchDto
}

// IsSuccess returns true when this get ethernet switch Id o k response has a 2xx status code
func (o *GetEthernetSwitchIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ethernet switch Id o k response has a 3xx status code
func (o *GetEthernetSwitchIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ethernet switch Id o k response has a 4xx status code
func (o *GetEthernetSwitchIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ethernet switch Id o k response has a 5xx status code
func (o *GetEthernetSwitchIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ethernet switch Id o k response a status code equal to that given
func (o *GetEthernetSwitchIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetEthernetSwitchIDOK) Error() string {
	return fmt.Sprintf("[GET /ethernet-switch/{id}][%d] getEthernetSwitchIdOK  %+v", 200, o.Payload)
}

func (o *GetEthernetSwitchIDOK) String() string {
	return fmt.Sprintf("[GET /ethernet-switch/{id}][%d] getEthernetSwitchIdOK  %+v", 200, o.Payload)
}

func (o *GetEthernetSwitchIDOK) GetPayload() *models.DtosEthernetSwitchDto {
	return o.Payload
}

func (o *GetEthernetSwitchIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosEthernetSwitchDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEthernetSwitchIDNotFound creates a GetEthernetSwitchIDNotFound with default headers values
func NewGetEthernetSwitchIDNotFound() *GetEthernetSwitchIDNotFound {
	return &GetEthernetSwitchIDNotFound{}
}

/*
GetEthernetSwitchIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEthernetSwitchIDNotFound struct {
}

// IsSuccess returns true when this get ethernet switch Id not found response has a 2xx status code
func (o *GetEthernetSwitchIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ethernet switch Id not found response has a 3xx status code
func (o *GetEthernetSwitchIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ethernet switch Id not found response has a 4xx status code
func (o *GetEthernetSwitchIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ethernet switch Id not found response has a 5xx status code
func (o *GetEthernetSwitchIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get ethernet switch Id not found response a status code equal to that given
func (o *GetEthernetSwitchIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetEthernetSwitchIDNotFound) Error() string {
	return fmt.Sprintf("[GET /ethernet-switch/{id}][%d] getEthernetSwitchIdNotFound ", 404)
}

func (o *GetEthernetSwitchIDNotFound) String() string {
	return fmt.Sprintf("[GET /ethernet-switch/{id}][%d] getEthernetSwitchIdNotFound ", 404)
}

func (o *GetEthernetSwitchIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEthernetSwitchIDInternalServerError creates a GetEthernetSwitchIDInternalServerError with default headers values
func NewGetEthernetSwitchIDInternalServerError() *GetEthernetSwitchIDInternalServerError {
	return &GetEthernetSwitchIDInternalServerError{}
}

/*
GetEthernetSwitchIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetEthernetSwitchIDInternalServerError struct {
}

// IsSuccess returns true when this get ethernet switch Id internal server error response has a 2xx status code
func (o *GetEthernetSwitchIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ethernet switch Id internal server error response has a 3xx status code
func (o *GetEthernetSwitchIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ethernet switch Id internal server error response has a 4xx status code
func (o *GetEthernetSwitchIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ethernet switch Id internal server error response has a 5xx status code
func (o *GetEthernetSwitchIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get ethernet switch Id internal server error response a status code equal to that given
func (o *GetEthernetSwitchIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetEthernetSwitchIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ethernet-switch/{id}][%d] getEthernetSwitchIdInternalServerError ", 500)
}

func (o *GetEthernetSwitchIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /ethernet-switch/{id}][%d] getEthernetSwitchIdInternalServerError ", 500)
}

func (o *GetEthernetSwitchIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
