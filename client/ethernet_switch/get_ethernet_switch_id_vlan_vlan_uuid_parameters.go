// Code generated by go-swagger; DO NOT EDIT.

package ethernet_switch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetEthernetSwitchIDVlanVlanUUIDParams creates a new GetEthernetSwitchIDVlanVlanUUIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetEthernetSwitchIDVlanVlanUUIDParams() *GetEthernetSwitchIDVlanVlanUUIDParams {
	return &GetEthernetSwitchIDVlanVlanUUIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetEthernetSwitchIDVlanVlanUUIDParamsWithTimeout creates a new GetEthernetSwitchIDVlanVlanUUIDParams object
// with the ability to set a timeout on a request.
func NewGetEthernetSwitchIDVlanVlanUUIDParamsWithTimeout(timeout time.Duration) *GetEthernetSwitchIDVlanVlanUUIDParams {
	return &GetEthernetSwitchIDVlanVlanUUIDParams{
		timeout: timeout,
	}
}

// NewGetEthernetSwitchIDVlanVlanUUIDParamsWithContext creates a new GetEthernetSwitchIDVlanVlanUUIDParams object
// with the ability to set a context for a request.
func NewGetEthernetSwitchIDVlanVlanUUIDParamsWithContext(ctx context.Context) *GetEthernetSwitchIDVlanVlanUUIDParams {
	return &GetEthernetSwitchIDVlanVlanUUIDParams{
		Context: ctx,
	}
}

// NewGetEthernetSwitchIDVlanVlanUUIDParamsWithHTTPClient creates a new GetEthernetSwitchIDVlanVlanUUIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetEthernetSwitchIDVlanVlanUUIDParamsWithHTTPClient(client *http.Client) *GetEthernetSwitchIDVlanVlanUUIDParams {
	return &GetEthernetSwitchIDVlanVlanUUIDParams{
		HTTPClient: client,
	}
}

/*
GetEthernetSwitchIDVlanVlanUUIDParams contains all the parameters to send to the API endpoint

	for the get ethernet switch ID vlan vlan UUID operation.

	Typically these are written to a http.Request.
*/
type GetEthernetSwitchIDVlanVlanUUIDParams struct {

	/* ID.

	   Ethernet switch ID
	*/
	ID string

	/* VlanUUID.

	   Ethernet switch VLAN UUID
	*/
	VlanUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get ethernet switch ID vlan vlan UUID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WithDefaults() *GetEthernetSwitchIDVlanVlanUUIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get ethernet switch ID vlan vlan UUID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WithTimeout(timeout time.Duration) *GetEthernetSwitchIDVlanVlanUUIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WithContext(ctx context.Context) *GetEthernetSwitchIDVlanVlanUUIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WithHTTPClient(client *http.Client) *GetEthernetSwitchIDVlanVlanUUIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WithID(id string) *GetEthernetSwitchIDVlanVlanUUIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) SetID(id string) {
	o.ID = id
}

// WithVlanUUID adds the vlanUUID to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WithVlanUUID(vlanUUID string) *GetEthernetSwitchIDVlanVlanUUIDParams {
	o.SetVlanUUID(vlanUUID)
	return o
}

// SetVlanUUID adds the vlanUuid to the get ethernet switch ID vlan vlan UUID params
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) SetVlanUUID(vlanUUID string) {
	o.VlanUUID = vlanUUID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEthernetSwitchIDVlanVlanUUIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param vlanUUID
	if err := r.SetPathParam("vlanUUID", o.VlanUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
