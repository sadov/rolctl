// Code generated by go-swagger; DO NOT EDIT.

package ethernet_switch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// PostEthernetSwitchIDPortReader is a Reader for the PostEthernetSwitchIDPort structure.
type PostEthernetSwitchIDPortReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEthernetSwitchIDPortReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostEthernetSwitchIDPortOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostEthernetSwitchIDPortBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostEthernetSwitchIDPortNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostEthernetSwitchIDPortInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostEthernetSwitchIDPortOK creates a PostEthernetSwitchIDPortOK with default headers values
func NewPostEthernetSwitchIDPortOK() *PostEthernetSwitchIDPortOK {
	return &PostEthernetSwitchIDPortOK{}
}

/*
PostEthernetSwitchIDPortOK describes a response with status code 200, with default header values.

OK
*/
type PostEthernetSwitchIDPortOK struct {
	Payload *models.DtosEthernetSwitchPortDto
}

// IsSuccess returns true when this post ethernet switch Id port o k response has a 2xx status code
func (o *PostEthernetSwitchIDPortOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post ethernet switch Id port o k response has a 3xx status code
func (o *PostEthernetSwitchIDPortOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id port o k response has a 4xx status code
func (o *PostEthernetSwitchIDPortOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ethernet switch Id port o k response has a 5xx status code
func (o *PostEthernetSwitchIDPortOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post ethernet switch Id port o k response a status code equal to that given
func (o *PostEthernetSwitchIDPortOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostEthernetSwitchIDPortOK) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortOK  %+v", 200, o.Payload)
}

func (o *PostEthernetSwitchIDPortOK) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortOK  %+v", 200, o.Payload)
}

func (o *PostEthernetSwitchIDPortOK) GetPayload() *models.DtosEthernetSwitchPortDto {
	return o.Payload
}

func (o *PostEthernetSwitchIDPortOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosEthernetSwitchPortDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEthernetSwitchIDPortBadRequest creates a PostEthernetSwitchIDPortBadRequest with default headers values
func NewPostEthernetSwitchIDPortBadRequest() *PostEthernetSwitchIDPortBadRequest {
	return &PostEthernetSwitchIDPortBadRequest{}
}

/*
PostEthernetSwitchIDPortBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostEthernetSwitchIDPortBadRequest struct {
	Payload *models.DtosValidationErrorDto
}

// IsSuccess returns true when this post ethernet switch Id port bad request response has a 2xx status code
func (o *PostEthernetSwitchIDPortBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ethernet switch Id port bad request response has a 3xx status code
func (o *PostEthernetSwitchIDPortBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id port bad request response has a 4xx status code
func (o *PostEthernetSwitchIDPortBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post ethernet switch Id port bad request response has a 5xx status code
func (o *PostEthernetSwitchIDPortBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post ethernet switch Id port bad request response a status code equal to that given
func (o *PostEthernetSwitchIDPortBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostEthernetSwitchIDPortBadRequest) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortBadRequest  %+v", 400, o.Payload)
}

func (o *PostEthernetSwitchIDPortBadRequest) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortBadRequest  %+v", 400, o.Payload)
}

func (o *PostEthernetSwitchIDPortBadRequest) GetPayload() *models.DtosValidationErrorDto {
	return o.Payload
}

func (o *PostEthernetSwitchIDPortBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosValidationErrorDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEthernetSwitchIDPortNotFound creates a PostEthernetSwitchIDPortNotFound with default headers values
func NewPostEthernetSwitchIDPortNotFound() *PostEthernetSwitchIDPortNotFound {
	return &PostEthernetSwitchIDPortNotFound{}
}

/*
PostEthernetSwitchIDPortNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostEthernetSwitchIDPortNotFound struct {
}

// IsSuccess returns true when this post ethernet switch Id port not found response has a 2xx status code
func (o *PostEthernetSwitchIDPortNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ethernet switch Id port not found response has a 3xx status code
func (o *PostEthernetSwitchIDPortNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id port not found response has a 4xx status code
func (o *PostEthernetSwitchIDPortNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post ethernet switch Id port not found response has a 5xx status code
func (o *PostEthernetSwitchIDPortNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post ethernet switch Id port not found response a status code equal to that given
func (o *PostEthernetSwitchIDPortNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PostEthernetSwitchIDPortNotFound) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortNotFound ", 404)
}

func (o *PostEthernetSwitchIDPortNotFound) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortNotFound ", 404)
}

func (o *PostEthernetSwitchIDPortNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEthernetSwitchIDPortInternalServerError creates a PostEthernetSwitchIDPortInternalServerError with default headers values
func NewPostEthernetSwitchIDPortInternalServerError() *PostEthernetSwitchIDPortInternalServerError {
	return &PostEthernetSwitchIDPortInternalServerError{}
}

/*
PostEthernetSwitchIDPortInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostEthernetSwitchIDPortInternalServerError struct {
}

// IsSuccess returns true when this post ethernet switch Id port internal server error response has a 2xx status code
func (o *PostEthernetSwitchIDPortInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ethernet switch Id port internal server error response has a 3xx status code
func (o *PostEthernetSwitchIDPortInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id port internal server error response has a 4xx status code
func (o *PostEthernetSwitchIDPortInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ethernet switch Id port internal server error response has a 5xx status code
func (o *PostEthernetSwitchIDPortInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post ethernet switch Id port internal server error response a status code equal to that given
func (o *PostEthernetSwitchIDPortInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostEthernetSwitchIDPortInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortInternalServerError ", 500)
}

func (o *PostEthernetSwitchIDPortInternalServerError) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/port/][%d] postEthernetSwitchIdPortInternalServerError ", 500)
}

func (o *PostEthernetSwitchIDPortInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
