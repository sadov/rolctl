// Code generated by go-swagger; DO NOT EDIT.

package ethernet_switch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// PostEthernetSwitchIDVlanReader is a Reader for the PostEthernetSwitchIDVlan structure.
type PostEthernetSwitchIDVlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEthernetSwitchIDVlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostEthernetSwitchIDVlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostEthernetSwitchIDVlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostEthernetSwitchIDVlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostEthernetSwitchIDVlanOK creates a PostEthernetSwitchIDVlanOK with default headers values
func NewPostEthernetSwitchIDVlanOK() *PostEthernetSwitchIDVlanOK {
	return &PostEthernetSwitchIDVlanOK{}
}

/*
PostEthernetSwitchIDVlanOK describes a response with status code 200, with default header values.

OK
*/
type PostEthernetSwitchIDVlanOK struct {
	Payload *models.DtosEthernetSwitchVLANDto
}

// IsSuccess returns true when this post ethernet switch Id vlan o k response has a 2xx status code
func (o *PostEthernetSwitchIDVlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post ethernet switch Id vlan o k response has a 3xx status code
func (o *PostEthernetSwitchIDVlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id vlan o k response has a 4xx status code
func (o *PostEthernetSwitchIDVlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ethernet switch Id vlan o k response has a 5xx status code
func (o *PostEthernetSwitchIDVlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post ethernet switch Id vlan o k response a status code equal to that given
func (o *PostEthernetSwitchIDVlanOK) IsCode(code int) bool {
	return code == 200
}

func (o *PostEthernetSwitchIDVlanOK) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/vlan][%d] postEthernetSwitchIdVlanOK  %+v", 200, o.Payload)
}

func (o *PostEthernetSwitchIDVlanOK) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/vlan][%d] postEthernetSwitchIdVlanOK  %+v", 200, o.Payload)
}

func (o *PostEthernetSwitchIDVlanOK) GetPayload() *models.DtosEthernetSwitchVLANDto {
	return o.Payload
}

func (o *PostEthernetSwitchIDVlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosEthernetSwitchVLANDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEthernetSwitchIDVlanBadRequest creates a PostEthernetSwitchIDVlanBadRequest with default headers values
func NewPostEthernetSwitchIDVlanBadRequest() *PostEthernetSwitchIDVlanBadRequest {
	return &PostEthernetSwitchIDVlanBadRequest{}
}

/*
PostEthernetSwitchIDVlanBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostEthernetSwitchIDVlanBadRequest struct {
	Payload *models.DtosValidationErrorDto
}

// IsSuccess returns true when this post ethernet switch Id vlan bad request response has a 2xx status code
func (o *PostEthernetSwitchIDVlanBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ethernet switch Id vlan bad request response has a 3xx status code
func (o *PostEthernetSwitchIDVlanBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id vlan bad request response has a 4xx status code
func (o *PostEthernetSwitchIDVlanBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post ethernet switch Id vlan bad request response has a 5xx status code
func (o *PostEthernetSwitchIDVlanBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post ethernet switch Id vlan bad request response a status code equal to that given
func (o *PostEthernetSwitchIDVlanBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostEthernetSwitchIDVlanBadRequest) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/vlan][%d] postEthernetSwitchIdVlanBadRequest  %+v", 400, o.Payload)
}

func (o *PostEthernetSwitchIDVlanBadRequest) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/vlan][%d] postEthernetSwitchIdVlanBadRequest  %+v", 400, o.Payload)
}

func (o *PostEthernetSwitchIDVlanBadRequest) GetPayload() *models.DtosValidationErrorDto {
	return o.Payload
}

func (o *PostEthernetSwitchIDVlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosValidationErrorDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEthernetSwitchIDVlanInternalServerError creates a PostEthernetSwitchIDVlanInternalServerError with default headers values
func NewPostEthernetSwitchIDVlanInternalServerError() *PostEthernetSwitchIDVlanInternalServerError {
	return &PostEthernetSwitchIDVlanInternalServerError{}
}

/*
PostEthernetSwitchIDVlanInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostEthernetSwitchIDVlanInternalServerError struct {
}

// IsSuccess returns true when this post ethernet switch Id vlan internal server error response has a 2xx status code
func (o *PostEthernetSwitchIDVlanInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post ethernet switch Id vlan internal server error response has a 3xx status code
func (o *PostEthernetSwitchIDVlanInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post ethernet switch Id vlan internal server error response has a 4xx status code
func (o *PostEthernetSwitchIDVlanInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post ethernet switch Id vlan internal server error response has a 5xx status code
func (o *PostEthernetSwitchIDVlanInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post ethernet switch Id vlan internal server error response a status code equal to that given
func (o *PostEthernetSwitchIDVlanInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PostEthernetSwitchIDVlanInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/vlan][%d] postEthernetSwitchIdVlanInternalServerError ", 500)
}

func (o *PostEthernetSwitchIDVlanInternalServerError) String() string {
	return fmt.Sprintf("[POST /ethernet-switch/{id}/vlan][%d] postEthernetSwitchIdVlanInternalServerError ", 500)
}

func (o *PostEthernetSwitchIDVlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
