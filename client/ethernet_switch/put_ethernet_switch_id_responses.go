// Code generated by go-swagger; DO NOT EDIT.

package ethernet_switch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// PutEthernetSwitchIDReader is a Reader for the PutEthernetSwitchID structure.
type PutEthernetSwitchIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutEthernetSwitchIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutEthernetSwitchIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutEthernetSwitchIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutEthernetSwitchIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutEthernetSwitchIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutEthernetSwitchIDOK creates a PutEthernetSwitchIDOK with default headers values
func NewPutEthernetSwitchIDOK() *PutEthernetSwitchIDOK {
	return &PutEthernetSwitchIDOK{}
}

/*
PutEthernetSwitchIDOK describes a response with status code 200, with default header values.

OK
*/
type PutEthernetSwitchIDOK struct {
	Payload *models.DtosEthernetSwitchDto
}

// IsSuccess returns true when this put ethernet switch Id o k response has a 2xx status code
func (o *PutEthernetSwitchIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put ethernet switch Id o k response has a 3xx status code
func (o *PutEthernetSwitchIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ethernet switch Id o k response has a 4xx status code
func (o *PutEthernetSwitchIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put ethernet switch Id o k response has a 5xx status code
func (o *PutEthernetSwitchIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put ethernet switch Id o k response a status code equal to that given
func (o *PutEthernetSwitchIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutEthernetSwitchIDOK) Error() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdOK  %+v", 200, o.Payload)
}

func (o *PutEthernetSwitchIDOK) String() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdOK  %+v", 200, o.Payload)
}

func (o *PutEthernetSwitchIDOK) GetPayload() *models.DtosEthernetSwitchDto {
	return o.Payload
}

func (o *PutEthernetSwitchIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosEthernetSwitchDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutEthernetSwitchIDBadRequest creates a PutEthernetSwitchIDBadRequest with default headers values
func NewPutEthernetSwitchIDBadRequest() *PutEthernetSwitchIDBadRequest {
	return &PutEthernetSwitchIDBadRequest{}
}

/*
PutEthernetSwitchIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutEthernetSwitchIDBadRequest struct {
	Payload *models.DtosValidationErrorDto
}

// IsSuccess returns true when this put ethernet switch Id bad request response has a 2xx status code
func (o *PutEthernetSwitchIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ethernet switch Id bad request response has a 3xx status code
func (o *PutEthernetSwitchIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ethernet switch Id bad request response has a 4xx status code
func (o *PutEthernetSwitchIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ethernet switch Id bad request response has a 5xx status code
func (o *PutEthernetSwitchIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put ethernet switch Id bad request response a status code equal to that given
func (o *PutEthernetSwitchIDBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutEthernetSwitchIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutEthernetSwitchIDBadRequest) String() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutEthernetSwitchIDBadRequest) GetPayload() *models.DtosValidationErrorDto {
	return o.Payload
}

func (o *PutEthernetSwitchIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosValidationErrorDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutEthernetSwitchIDNotFound creates a PutEthernetSwitchIDNotFound with default headers values
func NewPutEthernetSwitchIDNotFound() *PutEthernetSwitchIDNotFound {
	return &PutEthernetSwitchIDNotFound{}
}

/*
PutEthernetSwitchIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutEthernetSwitchIDNotFound struct {
}

// IsSuccess returns true when this put ethernet switch Id not found response has a 2xx status code
func (o *PutEthernetSwitchIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ethernet switch Id not found response has a 3xx status code
func (o *PutEthernetSwitchIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ethernet switch Id not found response has a 4xx status code
func (o *PutEthernetSwitchIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put ethernet switch Id not found response has a 5xx status code
func (o *PutEthernetSwitchIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put ethernet switch Id not found response a status code equal to that given
func (o *PutEthernetSwitchIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutEthernetSwitchIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdNotFound ", 404)
}

func (o *PutEthernetSwitchIDNotFound) String() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdNotFound ", 404)
}

func (o *PutEthernetSwitchIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutEthernetSwitchIDInternalServerError creates a PutEthernetSwitchIDInternalServerError with default headers values
func NewPutEthernetSwitchIDInternalServerError() *PutEthernetSwitchIDInternalServerError {
	return &PutEthernetSwitchIDInternalServerError{}
}

/*
PutEthernetSwitchIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutEthernetSwitchIDInternalServerError struct {
}

// IsSuccess returns true when this put ethernet switch Id internal server error response has a 2xx status code
func (o *PutEthernetSwitchIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put ethernet switch Id internal server error response has a 3xx status code
func (o *PutEthernetSwitchIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put ethernet switch Id internal server error response has a 4xx status code
func (o *PutEthernetSwitchIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put ethernet switch Id internal server error response has a 5xx status code
func (o *PutEthernetSwitchIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put ethernet switch Id internal server error response a status code equal to that given
func (o *PutEthernetSwitchIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutEthernetSwitchIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdInternalServerError ", 500)
}

func (o *PutEthernetSwitchIDInternalServerError) String() string {
	return fmt.Sprintf("[PUT /ethernet-switch/{id}][%d] putEthernetSwitchIdInternalServerError ", 500)
}

func (o *PutEthernetSwitchIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
