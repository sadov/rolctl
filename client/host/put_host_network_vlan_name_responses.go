// Code generated by go-swagger; DO NOT EDIT.

package host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// PutHostNetworkVlanNameReader is a Reader for the PutHostNetworkVlanName structure.
type PutHostNetworkVlanNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutHostNetworkVlanNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutHostNetworkVlanNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutHostNetworkVlanNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutHostNetworkVlanNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutHostNetworkVlanNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutHostNetworkVlanNameOK creates a PutHostNetworkVlanNameOK with default headers values
func NewPutHostNetworkVlanNameOK() *PutHostNetworkVlanNameOK {
	return &PutHostNetworkVlanNameOK{}
}

/*
PutHostNetworkVlanNameOK describes a response with status code 200, with default header values.

OK
*/
type PutHostNetworkVlanNameOK struct {
	Payload *models.DtosHostNetworkVlanDto
}

// IsSuccess returns true when this put host network vlan name o k response has a 2xx status code
func (o *PutHostNetworkVlanNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put host network vlan name o k response has a 3xx status code
func (o *PutHostNetworkVlanNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put host network vlan name o k response has a 4xx status code
func (o *PutHostNetworkVlanNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put host network vlan name o k response has a 5xx status code
func (o *PutHostNetworkVlanNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put host network vlan name o k response a status code equal to that given
func (o *PutHostNetworkVlanNameOK) IsCode(code int) bool {
	return code == 200
}

func (o *PutHostNetworkVlanNameOK) Error() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameOK  %+v", 200, o.Payload)
}

func (o *PutHostNetworkVlanNameOK) String() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameOK  %+v", 200, o.Payload)
}

func (o *PutHostNetworkVlanNameOK) GetPayload() *models.DtosHostNetworkVlanDto {
	return o.Payload
}

func (o *PutHostNetworkVlanNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosHostNetworkVlanDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutHostNetworkVlanNameBadRequest creates a PutHostNetworkVlanNameBadRequest with default headers values
func NewPutHostNetworkVlanNameBadRequest() *PutHostNetworkVlanNameBadRequest {
	return &PutHostNetworkVlanNameBadRequest{}
}

/*
PutHostNetworkVlanNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PutHostNetworkVlanNameBadRequest struct {
	Payload *models.DtosValidationErrorDto
}

// IsSuccess returns true when this put host network vlan name bad request response has a 2xx status code
func (o *PutHostNetworkVlanNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put host network vlan name bad request response has a 3xx status code
func (o *PutHostNetworkVlanNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put host network vlan name bad request response has a 4xx status code
func (o *PutHostNetworkVlanNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put host network vlan name bad request response has a 5xx status code
func (o *PutHostNetworkVlanNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put host network vlan name bad request response a status code equal to that given
func (o *PutHostNetworkVlanNameBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PutHostNetworkVlanNameBadRequest) Error() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameBadRequest  %+v", 400, o.Payload)
}

func (o *PutHostNetworkVlanNameBadRequest) String() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameBadRequest  %+v", 400, o.Payload)
}

func (o *PutHostNetworkVlanNameBadRequest) GetPayload() *models.DtosValidationErrorDto {
	return o.Payload
}

func (o *PutHostNetworkVlanNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosValidationErrorDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutHostNetworkVlanNameNotFound creates a PutHostNetworkVlanNameNotFound with default headers values
func NewPutHostNetworkVlanNameNotFound() *PutHostNetworkVlanNameNotFound {
	return &PutHostNetworkVlanNameNotFound{}
}

/*
PutHostNetworkVlanNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PutHostNetworkVlanNameNotFound struct {
}

// IsSuccess returns true when this put host network vlan name not found response has a 2xx status code
func (o *PutHostNetworkVlanNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put host network vlan name not found response has a 3xx status code
func (o *PutHostNetworkVlanNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put host network vlan name not found response has a 4xx status code
func (o *PutHostNetworkVlanNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put host network vlan name not found response has a 5xx status code
func (o *PutHostNetworkVlanNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put host network vlan name not found response a status code equal to that given
func (o *PutHostNetworkVlanNameNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PutHostNetworkVlanNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameNotFound ", 404)
}

func (o *PutHostNetworkVlanNameNotFound) String() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameNotFound ", 404)
}

func (o *PutHostNetworkVlanNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutHostNetworkVlanNameInternalServerError creates a PutHostNetworkVlanNameInternalServerError with default headers values
func NewPutHostNetworkVlanNameInternalServerError() *PutHostNetworkVlanNameInternalServerError {
	return &PutHostNetworkVlanNameInternalServerError{}
}

/*
PutHostNetworkVlanNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PutHostNetworkVlanNameInternalServerError struct {
}

// IsSuccess returns true when this put host network vlan name internal server error response has a 2xx status code
func (o *PutHostNetworkVlanNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put host network vlan name internal server error response has a 3xx status code
func (o *PutHostNetworkVlanNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put host network vlan name internal server error response has a 4xx status code
func (o *PutHostNetworkVlanNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put host network vlan name internal server error response has a 5xx status code
func (o *PutHostNetworkVlanNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put host network vlan name internal server error response a status code equal to that given
func (o *PutHostNetworkVlanNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PutHostNetworkVlanNameInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameInternalServerError ", 500)
}

func (o *PutHostNetworkVlanNameInternalServerError) String() string {
	return fmt.Sprintf("[PUT /host/network/vlan/{name}][%d] putHostNetworkVlanNameInternalServerError ", 500)
}

func (o *PutHostNetworkVlanNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
