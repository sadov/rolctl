// Code generated by go-swagger; DO NOT EDIT.

package log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sadov/rolctl/models"
)

// GetLogAppIDReader is a Reader for the GetLogAppID structure.
type GetLogAppIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogAppIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogAppIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetLogAppIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLogAppIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLogAppIDOK creates a GetLogAppIDOK with default headers values
func NewGetLogAppIDOK() *GetLogAppIDOK {
	return &GetLogAppIDOK{}
}

/*
GetLogAppIDOK describes a response with status code 200, with default header values.

OK
*/
type GetLogAppIDOK struct {
	Payload *models.DtosAppLogDto
}

// IsSuccess returns true when this get log app Id o k response has a 2xx status code
func (o *GetLogAppIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get log app Id o k response has a 3xx status code
func (o *GetLogAppIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log app Id o k response has a 4xx status code
func (o *GetLogAppIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get log app Id o k response has a 5xx status code
func (o *GetLogAppIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get log app Id o k response a status code equal to that given
func (o *GetLogAppIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLogAppIDOK) Error() string {
	return fmt.Sprintf("[GET /log/app/{id}][%d] getLogAppIdOK  %+v", 200, o.Payload)
}

func (o *GetLogAppIDOK) String() string {
	return fmt.Sprintf("[GET /log/app/{id}][%d] getLogAppIdOK  %+v", 200, o.Payload)
}

func (o *GetLogAppIDOK) GetPayload() *models.DtosAppLogDto {
	return o.Payload
}

func (o *GetLogAppIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtosAppLogDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogAppIDNotFound creates a GetLogAppIDNotFound with default headers values
func NewGetLogAppIDNotFound() *GetLogAppIDNotFound {
	return &GetLogAppIDNotFound{}
}

/*
GetLogAppIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLogAppIDNotFound struct {
}

// IsSuccess returns true when this get log app Id not found response has a 2xx status code
func (o *GetLogAppIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get log app Id not found response has a 3xx status code
func (o *GetLogAppIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log app Id not found response has a 4xx status code
func (o *GetLogAppIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get log app Id not found response has a 5xx status code
func (o *GetLogAppIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get log app Id not found response a status code equal to that given
func (o *GetLogAppIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLogAppIDNotFound) Error() string {
	return fmt.Sprintf("[GET /log/app/{id}][%d] getLogAppIdNotFound ", 404)
}

func (o *GetLogAppIDNotFound) String() string {
	return fmt.Sprintf("[GET /log/app/{id}][%d] getLogAppIdNotFound ", 404)
}

func (o *GetLogAppIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLogAppIDInternalServerError creates a GetLogAppIDInternalServerError with default headers values
func NewGetLogAppIDInternalServerError() *GetLogAppIDInternalServerError {
	return &GetLogAppIDInternalServerError{}
}

/*
GetLogAppIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLogAppIDInternalServerError struct {
}

// IsSuccess returns true when this get log app Id internal server error response has a 2xx status code
func (o *GetLogAppIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get log app Id internal server error response has a 3xx status code
func (o *GetLogAppIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get log app Id internal server error response has a 4xx status code
func (o *GetLogAppIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get log app Id internal server error response has a 5xx status code
func (o *GetLogAppIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get log app Id internal server error response a status code equal to that given
func (o *GetLogAppIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLogAppIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /log/app/{id}][%d] getLogAppIdInternalServerError ", 500)
}

func (o *GetLogAppIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /log/app/{id}][%d] getLogAppIdInternalServerError ", 500)
}

func (o *GetLogAppIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
